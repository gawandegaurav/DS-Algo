{
  "LinkedList.dll": {
    "C:\\Users\\gawangau\\source\\GIT repo\\DS-Algo\\DataStructures\\LinkedList\\LinkedlistNode.cs": {
      "LinkedList.LinkedListNode`1": {
        "T LinkedList.LinkedListNode`1::get_Data()": {
          "Lines": {
            "5": 110
          },
          "Branches": []
        },
        "LinkedList.LinkedListNode`1<T> LinkedList.LinkedListNode`1::get_NextNode()": {
          "Lines": {
            "7": 293
          },
          "Branches": []
        },
        "System.Void LinkedList.LinkedListNode`1::.ctor(T)": {
          "Lines": {
            "9": 63,
            "10": 63,
            "11": 63,
            "12": 63,
            "13": 63
          },
          "Branches": []
        }
      }
    },
    "C:\\Users\\gawangau\\source\\GIT repo\\DS-Algo\\DataStructures\\LinkedList\\Program.cs": {
      "LinkedList.Program": {
        "System.Void LinkedList.Program::Main(System.String[])": {
          "Lines": {
            "8": 0,
            "9": 0,
            "10": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Users\\gawangau\\source\\GIT repo\\DS-Algo\\DataStructures\\LinkedList\\SinglyLinkedList.cs": {
      "LinkedList.SinglyLinkedList`1": {
        "System.Void LinkedList.SinglyLinkedList`1::InsertAtBeginning(T)": {
          "Lines": {
            "18": 8,
            "19": 8,
            "20": 8,
            "21": 3,
            "22": 3,
            "23": 3,
            "25": 5,
            "26": 5,
            "27": 5,
            "28": 5,
            "29": 8
          },
          "Branches": [
            {
              "Line": 20,
              "Offset": 19,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 3
            },
            {
              "Line": 20,
              "Offset": 19,
              "EndOffset": 32,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 5
            }
          ]
        },
        "System.Void LinkedList.SinglyLinkedList`1::InsertAtEnd(T)": {
          "Lines": {
            "32": 38,
            "33": 38,
            "34": 38,
            "35": 9,
            "36": 9,
            "37": 9,
            "39": 29,
            "40": 29,
            "41": 69,
            "42": 40,
            "43": 40,
            "44": 40,
            "46": 29,
            "47": 29,
            "48": 38
          },
          "Branches": [
            {
              "Line": 34,
              "Offset": 19,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 9
            },
            {
              "Line": 34,
              "Offset": 19,
              "EndOffset": 32,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 29
            },
            {
              "Line": 41,
              "Offset": 62,
              "EndOffset": 42,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 40
            },
            {
              "Line": 41,
              "Offset": 62,
              "EndOffset": 64,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 29
            }
          ]
        },
        "System.Void LinkedList.SinglyLinkedList`1::InsertAfterPosition(System.Int32,T)": {
          "Lines": {
            "51": 3,
            "52": 3,
            "53": 1,
            "54": 1,
            "55": 1,
            "58": 2,
            "59": 1,
            "60": 1,
            "61": 1,
            "63": 1,
            "64": 1,
            "65": 1,
            "67": 2,
            "68": 1,
            "69": 1,
            "70": 1,
            "71": 1,
            "72": 1,
            "73": 1,
            "74": 1,
            "75": 1,
            "77": 1,
            "78": 1,
            "79": 3
          },
          "Branches": [
            {
              "Line": 52,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 52,
              "Offset": 12,
              "EndOffset": 29,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            },
            {
              "Line": 58,
              "Offset": 35,
              "EndOffset": 37,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 1
            },
            {
              "Line": 58,
              "Offset": 35,
              "EndOffset": 49,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 1
            },
            {
              "Line": 67,
              "Offset": 82,
              "EndOffset": 61,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 1
            },
            {
              "Line": 67,
              "Offset": 82,
              "EndOffset": 84,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 1
            }
          ]
        },
        "LinkedList.LinkedListNode`1<T> LinkedList.SinglyLinkedList`1::DeleteAtBeginning()": {
          "Lines": {
            "82": 2,
            "83": 4,
            "85": 1,
            "86": 1,
            "88": 1,
            "89": 1,
            "90": 2
          },
          "Branches": [
            {
              "Line": 83,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 83,
              "Offset": 12,
              "EndOffset": 19,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            }
          ]
        },
        "LinkedList.LinkedListNode`1<T> LinkedList.SinglyLinkedList`1::DeleteFromEnd()": {
          "Lines": {
            "93": 1,
            "94": 0,
            "95": 1,
            "96": 1,
            "98": 5,
            "99": 4,
            "100": 4,
            "101": 4,
            "102": 4,
            "104": 1,
            "105": 1,
            "106": 1,
            "107": 1
          },
          "Branches": [
            {
              "Line": 94,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 94,
              "Offset": 12,
              "EndOffset": 18,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            },
            {
              "Line": 98,
              "Offset": 53,
              "EndOffset": 29,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 4
            },
            {
              "Line": 98,
              "Offset": 53,
              "EndOffset": 55,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 1
            }
          ]
        },
        "System.Void LinkedList.SinglyLinkedList`1::DeleteAll()": {
          "Lines": {
            "110": 1,
            "111": 1,
            "112": 1
          },
          "Branches": []
        },
        "LinkedList.LinkedListNode`1<T> LinkedList.SinglyLinkedList`1::DeleteFromPosition(System.Int32)": {
          "Lines": {
            "115": 3,
            "116": 4,
            "118": 3,
            "119": 2,
            "120": 1,
            "121": 1,
            "122": 1,
            "125": 1,
            "126": 1,
            "127": 1,
            "129": 2,
            "130": 1,
            "131": 1,
            "132": 1,
            "133": 1,
            "134": 1,
            "136": 1,
            "137": 1,
            "138": 1,
            "139": 3
          },
          "Branches": [
            {
              "Line": 116,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 116,
              "Offset": 12,
              "EndOffset": 19,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            },
            {
              "Line": 118,
              "Offset": 27,
              "EndOffset": 29,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 1
            },
            {
              "Line": 118,
              "Offset": 27,
              "EndOffset": 32,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 2
            },
            {
              "Line": 119,
              "Offset": 40,
              "EndOffset": 42,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 1
            },
            {
              "Line": 119,
              "Offset": 40,
              "EndOffset": 70,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 1
            },
            {
              "Line": 129,
              "Offset": 106,
              "EndOffset": 83,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 1
            },
            {
              "Line": 129,
              "Offset": 106,
              "EndOffset": 108,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 1
            }
          ]
        },
        "System.Boolean LinkedList.SinglyLinkedList`1::Contains(T)": {
          "Lines": {
            "142": 2,
            "143": 2,
            "144": 4,
            "145": 3,
            "146": 3,
            "147": 1,
            "148": 1,
            "150": 2,
            "151": 2,
            "153": 1,
            "154": 2
          },
          "Branches": [
            {
              "Line": 144,
              "Offset": 62,
              "EndOffset": 10,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 3
            },
            {
              "Line": 146,
              "Offset": 39,
              "EndOffset": 41,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 146,
              "Offset": 39,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            },
            {
              "Line": 144,
              "Offset": 62,
              "EndOffset": 64,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 1
            }
          ]
        },
        "System.String LinkedList.SinglyLinkedList`1::ToString()": {
          "Lines": {
            "157": 14,
            "158": 17,
            "159": 11,
            "160": 101,
            "161": 34,
            "162": 34,
            "163": 23,
            "164": 34,
            "165": 34,
            "167": 11,
            "168": 14
          },
          "Branches": [
            {
              "Line": 158,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 3
            },
            {
              "Line": 158,
              "Offset": 12,
              "EndOffset": 22,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 11
            },
            {
              "Line": 160,
              "Offset": 95,
              "EndOffset": 38,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 34
            },
            {
              "Line": 162,
              "Offset": 60,
              "EndOffset": 62,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 23
            },
            {
              "Line": 162,
              "Offset": 60,
              "EndOffset": 74,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 34
            },
            {
              "Line": 160,
              "Offset": 95,
              "EndOffset": 97,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 11
            }
          ]
        },
        "System.Collections.IEnumerator LinkedList.SinglyLinkedList`1::System.Collections.IEnumerable.GetEnumerator()": {
          "Lines": {
            "171": 0,
            "172": 0,
            "173": 0
          },
          "Branches": []
        },
        "System.Void LinkedList.SinglyLinkedList`1::.ctor()": {
          "Lines": {
            "12": 16,
            "13": 16,
            "14": 16,
            "15": 16
          },
          "Branches": []
        }
      },
      "LinkedList.SinglyLinkedList`1/<GetEnumerator>d__12": {
        "System.Boolean LinkedList.SinglyLinkedList`1/<GetEnumerator>d__12::MoveNext()": {
          "Lines": {
            "176": 11,
            "177": 11,
            "178": 45,
            "179": 34,
            "180": 34,
            "181": 34,
            "182": 34,
            "183": 11
          },
          "Branches": [
            {
              "Line": 176,
              "Offset": 14,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 178,
              "Offset": 114,
              "EndOffset": 51,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 34
            },
            {
              "Line": 176,
              "Offset": 14,
              "EndOffset": 78,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 34
            },
            {
              "Line": 178,
              "Offset": 114,
              "EndOffset": 116,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 11
            }
          ]
        }
      }
    }
  },
  "Queue.dll": {
    "C:\\Users\\gawangau\\source\\GIT repo\\DS-Algo\\DataStructures\\Queue\\Queue\\FixedSizeArrayQueue.cs": {
      "Queue.FixedSizeArrayQueue`1": {
        "System.Int32 Queue.FixedSizeArrayQueue`1::get_Size()": {
          "Lines": {
            "10": 25
          },
          "Branches": []
        },
        "System.Int32 Queue.FixedSizeArrayQueue`1::get_Length()": {
          "Lines": {
            "12": 13
          },
          "Branches": []
        },
        "System.Boolean Queue.FixedSizeArrayQueue`1::IsEmpty()": {
          "Lines": {
            "22": 18,
            "23": 18,
            "24": 18
          },
          "Branches": []
        },
        "System.Boolean Queue.FixedSizeArrayQueue`1::IsFull()": {
          "Lines": {
            "27": 24,
            "28": 24,
            "29": 24
          },
          "Branches": []
        },
        "System.Void Queue.FixedSizeArrayQueue`1::Enqueue(T)": {
          "Lines": {
            "32": 24,
            "33": 24,
            "34": 1,
            "35": 1,
            "38": 30,
            "40": 23,
            "41": 23,
            "42": 23
          },
          "Branches": [
            {
              "Line": 33,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 33,
              "Offset": 9,
              "EndOffset": 23,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 23
            },
            {
              "Line": 38,
              "Offset": 34,
              "EndOffset": 36,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 7
            },
            {
              "Line": 38,
              "Offset": 34,
              "EndOffset": 50,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 23
            }
          ]
        },
        "T Queue.FixedSizeArrayQueue`1::Dequeue()": {
          "Lines": {
            "45": 2,
            "46": 2,
            "47": 1,
            "48": 1,
            "51": 1,
            "52": 1,
            "53": 1,
            "55": 1,
            "56": 1
          },
          "Branches": [
            {
              "Line": 46,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 46,
              "Offset": 9,
              "EndOffset": 23,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            }
          ]
        },
        "T Queue.FixedSizeArrayQueue`1::Peek()": {
          "Lines": {
            "59": 1,
            "60": 1,
            "61": 0,
            "62": 0,
            "65": 1,
            "66": 1
          },
          "Branches": [
            {
              "Line": 60,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 60,
              "Offset": 9,
              "EndOffset": 23,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            }
          ]
        },
        "System.Void Queue.FixedSizeArrayQueue`1::Clear()": {
          "Lines": {
            "69": 1,
            "70": 8,
            "71": 3,
            "72": 3,
            "73": 3,
            "74": 1,
            "75": 1,
            "76": 1
          },
          "Branches": [
            {
              "Line": 70,
              "Offset": 43,
              "EndOffset": 5,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 3
            },
            {
              "Line": 70,
              "Offset": 43,
              "EndOffset": 45,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            }
          ]
        },
        "System.Boolean Queue.FixedSizeArrayQueue`1::Contains(T)": {
          "Lines": {
            "79": 2,
            "80": 0,
            "82": 14,
            "83": 6,
            "84": 6,
            "85": 1,
            "86": 1,
            "88": 5,
            "90": 1,
            "91": 2
          },
          "Branches": [
            {
              "Line": 80,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 80,
              "Offset": 9,
              "EndOffset": 15,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            },
            {
              "Line": 82,
              "Offset": 78,
              "EndOffset": 19,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 6
            },
            {
              "Line": 84,
              "Offset": 53,
              "EndOffset": 55,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 1
            },
            {
              "Line": 84,
              "Offset": 53,
              "EndOffset": 60,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 5
            },
            {
              "Line": 82,
              "Offset": 78,
              "EndOffset": 80,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 1
            }
          ]
        },
        "System.Int32 Queue.FixedSizeArrayQueue`1::GetLength()": {
          "Lines": {
            "94": 13,
            "95": 14,
            "96": 12,
            "97": 13
          },
          "Branches": [
            {
              "Line": 95,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 95,
              "Offset": 9,
              "EndOffset": 15,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 12
            }
          ]
        },
        "System.Void Queue.FixedSizeArrayQueue`1::.ctor(System.Int32)": {
          "Lines": {
            "14": 9,
            "15": 9,
            "16": 9,
            "17": 9,
            "18": 9,
            "19": 9
          },
          "Branches": []
        }
      }
    },
    "C:\\Users\\gawangau\\source\\GIT repo\\DS-Algo\\DataStructures\\Queue\\Queue\\LinkedListQueue.cs": {
      "Queue.LinkedListQueue`1": {
        "System.Int32 Queue.LinkedListQueue`1::get_Length()": {
          "Lines": {
            "13": 3
          },
          "Branches": []
        },
        "System.Void Queue.LinkedListQueue`1::Clear()": {
          "Lines": {
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 0
          },
          "Branches": []
        },
        "T Queue.LinkedListQueue`1::Peek()": {
          "Lines": {
            "28": 1,
            "29": 1,
            "30": 0,
            "31": 0,
            "34": 1,
            "35": 1
          },
          "Branches": [
            {
              "Line": 29,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 9,
              "EndOffset": 23,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            }
          ]
        },
        "System.Boolean Queue.LinkedListQueue`1::Contains(T)": {
          "Lines": {
            "38": 0,
            "39": 0,
            "40": 0,
            "41": 0,
            "42": 0,
            "43": 0,
            "44": 0,
            "45": 0,
            "48": 0,
            "49": 0,
            "51": 0,
            "52": 0
          },
          "Branches": [
            {
              "Line": 39,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 39,
              "Offset": 12,
              "EndOffset": 18,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 41,
              "Offset": 80,
              "EndOffset": 27,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 43,
              "Offset": 57,
              "EndOffset": 59,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 43,
              "Offset": 57,
              "EndOffset": 64,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 41,
              "Offset": 80,
              "EndOffset": 82,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            }
          ]
        },
        "T Queue.LinkedListQueue`1::Dequeue()": {
          "Lines": {
            "55": 2,
            "56": 2,
            "57": 1,
            "58": 1,
            "59": 1,
            "60": 1,
            "61": 1
          },
          "Branches": [
            {
              "Line": 56,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 56,
              "Offset": 9,
              "EndOffset": 22,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            }
          ]
        },
        "System.Void Queue.LinkedListQueue`1::Enqueue(T)": {
          "Lines": {
            "64": 15,
            "65": 15,
            "67": 15,
            "68": 4,
            "69": 4,
            "70": 4,
            "71": 4,
            "74": 11,
            "75": 11,
            "76": 15
          },
          "Branches": [
            {
              "Line": 67,
              "Offset": 16,
              "EndOffset": 18,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 4
            },
            {
              "Line": 67,
              "Offset": 16,
              "EndOffset": 35,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 11
            }
          ]
        },
        "System.Boolean Queue.LinkedListQueue`1::IsEmpty()": {
          "Lines": {
            "79": 21,
            "80": 21,
            "81": 21
          },
          "Branches": []
        },
        "System.Boolean Queue.LinkedListQueue`1::IsFull()": {
          "Lines": {
            "84": 0,
            "85": 0
          },
          "Branches": []
        },
        "System.String Queue.LinkedListQueue`1::ToString()": {
          "Lines": {
            "89": 2,
            "90": 0,
            "91": 2,
            "92": 22,
            "93": 8,
            "94": 8,
            "95": 6,
            "96": 8,
            "97": 8,
            "99": 2,
            "100": 2
          },
          "Branches": [
            {
              "Line": 90,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 90,
              "Offset": 12,
              "EndOffset": 22,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            },
            {
              "Line": 92,
              "Offset": 100,
              "EndOffset": 38,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 8
            },
            {
              "Line": 94,
              "Offset": 65,
              "EndOffset": 67,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 6
            },
            {
              "Line": 94,
              "Offset": 65,
              "EndOffset": 79,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 8
            },
            {
              "Line": 92,
              "Offset": 100,
              "EndOffset": 102,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 2
            }
          ]
        },
        "System.Int32 Queue.LinkedListQueue`1::GetLength()": {
          "Lines": {
            "113": 3,
            "114": 0,
            "115": 3,
            "116": 3,
            "117": 12,
            "118": 9,
            "119": 9,
            "120": 9,
            "121": 9,
            "123": 3,
            "124": 3
          },
          "Branches": [
            {
              "Line": 114,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 114,
              "Offset": 9,
              "EndOffset": 15,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 3
            },
            {
              "Line": 117,
              "Offset": 47,
              "EndOffset": 26,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 9
            },
            {
              "Line": 117,
              "Offset": 47,
              "EndOffset": 49,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 3
            }
          ]
        },
        "System.Void Queue.LinkedListQueue`1::.ctor()": {
          "Lines": {
            "15": 5,
            "16": 5,
            "17": 5,
            "18": 5,
            "19": 5
          },
          "Branches": []
        }
      },
      "Queue.LinkedListQueue`1/<GetEnumerator>d__13": {
        "System.Boolean Queue.LinkedListQueue`1/<GetEnumerator>d__13::MoveNext()": {
          "Lines": {
            "103": 2,
            "104": 2,
            "105": 10,
            "106": 8,
            "107": 8,
            "108": 8,
            "109": 8,
            "110": 2
          },
          "Branches": [
            {
              "Line": 103,
              "Offset": 14,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 105,
              "Offset": 119,
              "EndOffset": 51,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 8
            },
            {
              "Line": 103,
              "Offset": 14,
              "EndOffset": 83,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 8
            },
            {
              "Line": 105,
              "Offset": 119,
              "EndOffset": 121,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 2
            }
          ]
        }
      }
    },
    "C:\\Users\\gawangau\\source\\GIT repo\\DS-Algo\\DataStructures\\Queue\\Queue\\Program.cs": {
      "Queue.Program": {
        "System.Void Queue.Program::Main()": {
          "Lines": {
            "10": 0,
            "12": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Users\\gawangau\\source\\GIT repo\\DS-Algo\\DataStructures\\Queue\\Queue\\Exceptions\\QueueOverflowException.cs": {
      "Queue.Exceptions.QueueOverflowException": {
        "System.Void Queue.Exceptions.QueueOverflowException::.ctor(System.String)": {
          "Lines": {
            "7": 1,
            "8": 1,
            "10": 1
          },
          "Branches": []
        }
      }
    },
    "C:\\Users\\gawangau\\source\\GIT repo\\DS-Algo\\DataStructures\\Queue\\Queue\\Exceptions\\QueueUnderflowException.cs": {
      "Queue.Exceptions.QueueUnderflowException": {
        "System.Void Queue.Exceptions.QueueUnderflowException::.ctor(System.String)": {
          "Lines": {
            "7": 2,
            "8": 2,
            "10": 2
          },
          "Branches": []
        }
      }
    }
  }
}